name: "Rspec for Rails Apps"
on:
  workflow_dispatch:
    inputs:
      baseTarget:
        description: "Used to set your target for the base image"
        required: false
        type: string
      confdir:
        required: false
        type: string
        default: "/app/samvera/hyrax-webapp/solr/config"
      debug_enabled:
        required: false
        type: boolean
        default: false
      rspec_cmd:
        required: false
        type: string
        default: "gem install semaphore_test_boosters && rspec_booster --job $CI_NODE_INDEX/$CI_NODE_TOTAL"
      setup_db_cmd:
        required: false
        type: string
        default: "RAILS_ENV=test bundle exec rake db:create db:schema:load db:migrate"
      setup_solr_cmd:
        required: false
        type: string
        default: 'solrcloud-upload-configset.sh "${CONFDIR}" && SOLR_COLLECTION_NAME=hydra-test solrcloud-assign-configset.sh && solrcloud-assign-configset.sh'
      solrTarget:
        description: "Used to set your target for the solr image"
        required: false
        type: string
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      webTarget:
        description: "Used to set your target for the web image"
        required: false
        type: string
  workflow_call:
    inputs:
      baseTarget:
        description: "Used to set your target for the base image"
        required: false
        type: string
      confdir:
        required: false
        type: string
        default: "/app/samvera/hyrax-webapp/solr/config"
      debug_enabled:
        required: false
        type: boolean
        default: false
      rspec_cmd:
        required: false
        type: string
        default: "gem install semaphore_test_boosters && rspec_booster --job $CI_NODE_INDEX/$CI_NODE_TOTAL"
      setup_db_cmd:
        required: false
        type: string
        default: "RAILS_ENV=test bundle exec rake db:create db:schema:load db:migrate"
      setup_solr_cmd:
          required: false
          type: string
          default: 'solrcloud-upload-configset.sh "${CONFDIR}" && SOLR_COLLECTION_NAME=hydra-test solrcloud-assign-configset.sh && solrcloud-assign-configset.sh'
      solrTarget:
        description: "Used to set your target for the solr image"
        required: false
        type: string
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      webTarget:
        description: "Used to set your target for the web image"
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [10]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    env:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      CONFDIR: ${{ inputs.confdir }}
    steps:
      - id: setup
        name: Setup
        uses: scientist-softserv/actions/setup-env@v0.0.16
        with:
          tag: ${{ inputs.tag }}
          token: ${{ secrets.CHECKOUT_TOKEN || secrets.GITHUB_TOKEN }}
          subdir: ${{ inputs.subdir }}
      - name: Github Container Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - name: Start containers
        run: >-
          cd ${{ inputs.subdir }};
          [ -f "db/schema.rb" ] && chmod 777 db/schema.rb;
          [ -f "bin/checkout_all.sh" ] && ./bin/checkout_all.sh;
          docker compose -f docker-compose-koppie.yml pull --ignore-pull-failures;
          docker compose -f docker-compose-koppie.yml up -d
      - name: Setup Solr
        if: ${{ inputs.solrTarget != '' }}
        shell: bash
        run: >-
          cd ${{ inputs.subdir }};
          docker compose -f docker-compose-koppie.yml exec -T solr sh -c
          "${{ inputs.setup_solr_cmd }}"
      - name: Setup db
        run: >-
          cd ${{ inputs.subdir }};
          docker compose -f docker-compose-koppie.yml exec -T web sh -c
          "${{ inputs.setup_db_cmd }}"
      - name: Run Specs
        id: run-specs
        env:
          # Specifies how many jobs you would like to run in parallel,
          # used for partitioning
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        continue-on-error: true
        run: >-
          cd ${{ inputs.subdir }};
          docker compose -f docker-compose-koppie.yml exec -T web sh -c
          "${{ inputs.rspec_cmd }}"
      # you need TB_RSPEC_OPTIONS: --format RspecJunitFormatter --out rspec.xml and TB_RSPEC_FORMATTER: progress in your .env for this to work
      - name: Capture Container Logs
#        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          images: 'koppie-chrome-1'
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          report_paths: '**/rspec*.xml'
          fail_on_failure: true
          require_passed_tests: true
          detailed_summary: true
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        with:
          limit-access-to-actor: true
      - name: Check For Failure
        if: ${{ failure() }}
        run: echo 'Actions failure detected'; exit 1
